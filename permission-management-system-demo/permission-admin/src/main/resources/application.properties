server.port=8001
spring.datasource.name=druidDataSource
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.druid.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.druid.url=jdbc:mysql://192.168.0.111:3306/permission?useUnicode=true&zeroDateTimeBehavior=convertToNull&autoReconnect=true&characterEncoding=utf-8&serverTimezone=UTC&useSSL=false
spring.datasource.druid.username=root
spring.datasource.druid.password=root

# application.properties
logging.config=classpath:log4j2.xml
spring.datasource.druid.connection-properties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

# 配置日志输出 ------------------开始
spring.datasource.druid.filter.slf4j.enabled=true
spring.datasource.druid.filter.slf4j.statement-create-after-log-enabled=false
spring.datasource.druid.filter.slf4j.statement-close-after-log-enabled=false
spring.datasource.druid.filter.slf4j.result-set-open-after-log-enabled=false
spring.datasource.druid.filter.slf4j.result-set-close-after-log-enabled=false
# 配置监控统计拦截的filters（常用的插件有=>stat:监控统计  log4j:日志  wall:防御sql注入），取消后监控界面SQL无法进行统计，wall用于防火墙
spring.datasource.druid.filters=stat,wall,log4j2,config
# 配置日志输出 ------------------结束

# 初始化大小
spring.datasource.druid.initial-size=1
# 最小连接数
spring.datasource.druid.min-idle=1
# 最大连接数
spring.datasource.druid.max-active=100
# 获取连接等待超时时间
spring.datasource.druid.max-wait=60000
# 间隔多久才进行一次检测，检测需要关闭的空闲连接，单位：毫秒
spring.datasource.druid.time-between-eviction-runs-millis=60000
# 一个连接在池中最小生存时间，单位：毫秒
spring.datasource.druid.keep-alive-between-time-millis=300000

spring.datasource.druid.validation-query=select 'x'
spring.datasource.druid.test-while-idle=true
spring.datasource.druid.test-on-borrow=false
spring.datasource.druid.test-on-return=false
spring.datasource.druid.pool-prepared-statements=true
spring.datasource.druid.max-open-prepared-statements=50
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20
spring.datasource.druid.min-evictable-idle-time-millis=30000

spring.boot.admin.client.url=http://localhost:8000
management.endpoints.web.exposure.include=*